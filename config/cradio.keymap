// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <"definitions.h">
#include <"macroscombos.h">

// Home row mods
#define HRML(k1,k2,k3,k4) &lt MEDIA k1 &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT k3  &ht LGUI k4
#define HRNL(k1,k2,k3,k4) &ht LGUI k1 &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4

// Caps word interrupt exceptions
&caps_word { continue-list = <F_UNDS F_MINS BSPC RSHFT LSHFT F_UNDS F_ADIA F_ODIA F_ARNG>; };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮    ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  B       │    │  J       │  L       │  U       │  Y       │  Ö       │
            &kp Q      &kp W      &kp F      &kp P      &kp B           &kp J      &kp L      &kp U      &kp Y     &kp F_ODIA
        //├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A/media │  R/alt   │  S/Ctrl  │  T/shift │  G       │    │  M       │  N/shift │  E/Ctrl  |  I/LGui  |  O       │
            HRML(A,        R,         S,         T)     &kp G           &kp M      HRMR(N,        E,         I,        O)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z/LGui  │  ,;      │  C       │  D       │  V       │    │  K       │  H       │  Ä       │ .:       │  X       │
           &ht Z LGUI  &kp COMMA  &kp C      &kp D      &kp V          &kp K      &kp H     &kp F_ADIA  &kp DOT    &kp X 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt SYM RET &lt SHC SPACE  &lt ARR BSPC &lt NUM DEL
        //                                 ╰──────────┴──────────╯    ╰──────────┴──────────╯
            >;
        };

        symbol_layer {
            bindings = <
        //╭──────────────┬────────────┬──────────┬───────────┬───────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ ClsDstp      │ NewDstp    │ PrvDstp  │ NxtDstp   │ TskView   │   │          │ Ins      │ CapsL    │ NumL     │ ScrLck   │
           &kp ClsDstp    &kp NewDstp &kp PrvDstp &kp NxtDstp &kp TskView     &trans     &kp INS    &kp CAPS  &kp KP_NLCK &kp SLCK
        //├──────────────┼────────────┼──────────┼───────────┼───────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  |           │  &         │  #       │  @        │           │   │          │  ?       │  !       │  ¨       │  ~       │
           &kp F_PIPE     &kp F_AMPR   &kp F_HASH &kp F_AT     &trans         &trans    &kp F_QUES &kp F_EXLM &kp F_DIAE &kp F_TILD
        //├──────────────┼────────────┼──────────┼───────────┼───────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ^           │            │  ¤       |  `        │           │   │          │  ´       │  §       │  ½       │          │
          &ht LGUI F_CIRC  &trans      &kp F_CURR &kp F_GRV    &trans         &trans    &kp F_ACUT &kp F_SECT &kp F_HALF  &trans
        //╰──────────────┴────────────┴──────────┼───────────┼───────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                               &trans       &trans          &trans     &trans
        //                                       ╰───────────┴───────────╯   ╰──────────┴──────────╯
            >;
        };


#define SC_Clse (LA(F4))                 // Close window
#define PrevTab  (LC(PG_UP))             // Previous tab (win), ctrl + pgup
#define NextTab  (LC(PG_DN))             // Next tab (win), ctrl + pgdn
#define RestTab  (LC(LS(T)))             // Restore tab (Browser), ctrl + shift + T  toimiiko???
#define ClseTab  (LC(W))                 // Close tab (Ctrl + W)

        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  F1      │  F2      │  F3      │  F4      │  F5      │   │  F6      │  F7      │  F8      │  F9      │  F10     │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6    &kp F7      &kp F8     &kp F9    &kp F10
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  1       │  2       │  3       │  4       │  F11     │   │  F12     │  7       │  8       │  9       │  0       │
            HRNL(1,     2,         3,         4)        &kp F11       &kp F12     HRMR(7,     8,         9,         0)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ^       │          │  %       │  5       │          │   │  $       │  6       │  €       │          │          │
           &kp F_CIRC  &trans    &kp F_PERC  &trans     &trans         &kp F_DLR  &kp 6     &kp F_EURO   &trans    &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │  ←       │  ↑       │  →       │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │  ↓       │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
